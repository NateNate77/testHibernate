<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:beans="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

<<<<<<< HEAD
=======
    <jdbc:embedded-database id="h2Source" type="H2">
        <jdbc:script location="classpath:schema.sql"/>
        <jdbc:script location="classpath:data.sql"/>
    </jdbc:embedded-database>

    <!--<bean id="h2Template"-->
          <!--class="org.springframework.jdbc.core.JdbcTemplate">-->
        <!--<constructor-arg name="dataSource" ref="h2Source"/>-->
    <!--</bean>-->

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>



>>>>>>> 0cf70acff711824ca7ef551564833f522108ff7a
    <context:property-placeholder location="classpath:application.properties" />

    <!--Это можно не раскоменчивать-->
    <!--<context:annotation-config/>-->

<<<<<<< HEAD
    <!--С этими двумя бинами работает нормально-->
=======
    <!--<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">-->
        <!--<property name="sessionFactory" ref="sessionFactory"/>-->
    <!--</bean>-->
>>>>>>> 0cf70acff711824ca7ef551564833f522108ff7a

    <!--<jdbc:embedded-database id="test" type="H2">-->
        <!--<jdbc:script location="classpath:schema.sql"/>-->
        <!--<jdbc:script location="classpath:data.sql"/>-->
    <!--</jdbc:embedded-database>-->


    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource"></property>
    </bean>


<!--Этот бин все ломает-->
    <!--<bean id="createTable" class="testHibernate.controller.HelloSpringMVC" init-method="init"></bean>-->


    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:mem:test"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

    <!--Ненужная хрень, пусть будет пока-->
    <!--<jdbc:initialize-database data-source="dataSource">-->
        <!--<jdbc:script location="classpath:schema.sql"/>-->
        <!--<jdbc:script location="classpath:data.sql"/>-->
    <!--</jdbc:initialize-database>-->

    <bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" id="emf">
        <property name="persistenceUnitName" value="testHibernate.person_catalog"/>
        <property name="dataSource" ref="dataSource"/>
        <!--<property name="dataSource" ref="h2Source"/>-->
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>

        <property name="jpaProperties">
            <props>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>


        <property name="packagesToScan" value="testHibernate.model"/>
    </bean>


    <tx:annotation-driven/>

    <context:component-scan base-package="testHibernate" />

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix">
            <value>/WEB-INF/pages/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>


    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>


    <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="showSql" value="true"/>
        <property name="generateDdl" value="true"/>
        <property name="databasePlatform" value="org.hibernate.dialect.H2Dialect"/>
    </bean>

    <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="emf" />
        <property name="jpaDialect" ref="jpaDialect"/>
    </bean>

    <bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>

<<<<<<< HEAD
=======
    <!--<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--<property name="packagesToScan" value="testHibernate"/>-->
        <!--<property name="hibernateProperties">-->
            <!--<props>-->
                <!--<prop key="hibernate.connection.driver_class">org.h2.Driver</prop>-->
                <!--<prop key="hibernate.hbm2ddl.auto">update</prop>-->
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>-->
                <!--<prop key="hibernate.connection.url">jdbc:h2:mem:test</prop>-->
                <!--&lt;!&ndash;<prop key="hibernate.connection.url">jdbc:h2://localhost:3306/</prop>&ndash;&gt;-->
                <!--<prop key="hibernate.max_fetch_depth">3</prop>-->
                <!--<prop key="hibernate.jdbc.fetch_size">50</prop>-->
                <!--<prop key="hibernate.jdbc.batch_size">10</prop>-->
                <!--<prop key="hibernate.show_sql">true</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:mem:test"/>
        <!--<property name="url" value="jdbc:h2:mem://localhost:9092/test; INIT=create schema if not exists person\; runscript from 'schema.sql'"/>-->
        <!--tcp://localhost:9092/default-->
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>



    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--<property name="dataSource" ref="h2Source"/>-->
        <property name="annotatedClasses">
            <beans:list>
                <value>testHibernate.model.Person</value>
            </beans:list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
        <!--<property name="configLocation" value="classpath:hibernate.cfg.xml"/>-->
    </bean>

    <!--<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource"/>-->

    <!--</bean>-->

    <!--<bean id="personDAO" class="testHibernate.dao.PersonDAO">-->
        <!--<property name="sessionFactory" ref="sessionFactory"/>-->
    <!--</bean>-->

    <jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="classpath:schema.sql"/>
        <jdbc:script location="classpath:data.sql"/>
    </jdbc:initialize-database>

>>>>>>> 0cf70acff711824ca7ef551564833f522108ff7a

    <tx:annotation-driven transaction-manager="txManager" />

</beans>